# For complete documentation of this file, please see Geany's main documentation
[styling]
# comment lexer C
preprocessor=#c00;#fff;false;false
commentline=#c44;#fff;false;true

# comment lexer nsis
comment=#c44;#fff;false;true

# nombre
number=#080;#fff;false;false

# string double guillemet
string=#a80;#fff;false;false

# string simple guillemet
character=#f80;#fff;false;false
#~ singlestring=#f80;#f0f;false;false

literalstring=#c00;#fff;false;false

# 'primary' word lexer C Ruby
word=#00f;#fff;true;false
# 'secondary' word lexer C
word2=#088;#fff;false;false
# 'functions' lexer nsis
#function=#00f;#fff;false;false

#identifier=#003;#fff;true;false

operator=#808;#fff;false;false

format=#f0f;#fff;false;false

# lexer nsis '$' variable
#variable=#00f;#fff;true;false
# 'lables' lexer nsis
#label=#088;#fff;false;false
#macrodef=#00f;#fff;true;false

# lexer Tcl
inquote=#a80;#fff;false;false
wordinquote=#f80;#fff;false;false
substitution=#000;#fff;true;false
wordtcl=#00f;#fff;true;false
wordtk=#088;#fff;false;false

# lexer Sh
scalar=#000;#fff;true;false
backticks=#844;#fff;false;true
#param=#048;#fff;false;true

# lexer PowerShell
variable=#000;#fff;true;false
keyword=#00f;#fff;true;false
alias=#088;#fff;false;false

# lexer R
kword=#00f;#fff;true;false
string2=#f80;#fff;false;false

[keywords]
# lexer C
primary=await bool break case catch class const continue continuous default deffunc doOnce empty else ext false fetch finally float for foreach function if int integer isset let long namespace new null par prepContinuous return short spawn static string switch this throw true try typeof until var void while

# lexer C
secondary=adapt beep bip play send

# lexer Tcl
tcl=await bool break case catch class const continue continuous default deffunc doOnce empty else ext false fetch finally float for foreach function if int integer isset let long namespace new null par prepContinuous return short spawn static string switch this throw true try typeof until var void while
tk=adapt beep bip play send
#identifiers=ee rr

# lexer PowerShell
keywords=await bool break case catch class const continue continuous default deffunc doonce empty else false fetch finally float for foreach function if int integer isset let long namespace new null par prepcontinuous return short spawn static string switch this throw true try typeof until var void while
aliases=adapt beep bip play send

# lexer nsis
#functions=await .bip bool break case catch class const continue continuous default deffunc doonce empty else false fetch finally float for foreach function if int integer isset let long namespace new null par prepcontinuous return short spawn static string switch this throw true try typeof until .var void while
#lables=beep bip play send

[lexer_properties]
#phpscript.mode=1

[settings]
# default extension used when saving files
extension=fg
lexer_filetype=C
#tag_parser=Nsis
comment_single=#
comment_use_indent=true
#~ whitespace_chars=\s\t!\"#$%&'()*+,-./:;<=>?@[\\]^`{|}~
#~ wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

[indentation]
#width=4
# 0 is spaces, 1 is tabs, 2 is tab & spaces
type=1

#~ [build_settings]
#~ [build-menu]
# %f will be replaced by the complete filename
# %e will be replaced by the filename without extension
# (use only one of it at one time)
#~ compiler=zephir build
