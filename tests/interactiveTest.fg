.print '.....> TEST'
.print ''
.print {seq
	4
	67
	89
}
.var clickButton
.var edit
#.print (&pluss 3 4 9)
#(&inputNewHumanText edit)
#.print (&awaitHumanText)
:getClick '#theButton' clickButton
.print '.....> STEP1'
.print :awaitFileContent 'interactiveTest.fg' 'text'
.print '.....> STEP2'
:await clickButton beep
.print '.....> STEP3'
:awaitDomeventBip 'mousedown' '#theButton2'
.print '.....> STEP4'
#.print :await edit beep
.print :randomIntBetween 0 31
#(&displayNewMessageIn 'Hello!' 'body')
.displayNewMessage 'Hello!'
#(&awaitClickBeep '#theButton')
.print (&awaitHumanText)
.var message <-- :displayMessageIn 'Hello World!' 'p.display.other'
{short (message) `message.style.color = 'red'`}
.print .existsCssSelector '#xyz'
.print .existsCssSelector 'body'
%setCssProperty 'theButton' 'background-color' '#c0ffff'
.print '.....> STEP5'
#.print %awaitNewChoice 'remove' 'body' (par 'un' 'deux')
.print %awaitNewChoice 'keep' 'body' (par 'un' 'deux')
.print .awaitChoice 'p.display.other'
.print '.....> STEP6'
.var thePar
.print {par @thePar
	!awaitForever
	:breakReturn thePar '*** Step 6 ***'
}
.print '.....> STEP7'
.print {par_race
	!awaitForever
	'*** Step 7 ***'
}
.print '.....> STEP8'
.var c
.var theParB
{par @theParB
	.var a <-- 2
	.var b <-- 3
	{whileTrue_dependsOn (par a b)
		c <-- :* $a $b
	}
	{whileTrue
		:await c beep
		{if [$c > 1]
			.print (+ 'c (=6): ' $c)
			.break theParB
		}
	}
}
.print '.....> STEP8'
.var imBlob <-- :awaitFileContent 'giraffe.jpg' 'blob'
:displayImageIn $imBlob '#theImage'
.print '.....> END'
